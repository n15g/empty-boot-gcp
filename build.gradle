buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE"
        classpath "com.google.cloud.tools:appengine-gradle-plugin:1.+"
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'com.moowork.node'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "n15g.cob"
version = "1.0-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    providedRuntime
}

dependencies {
    configurations {
        compile.exclude module: 'spring-boot-starter-tomcat'
    }
    compile "com.google.appengine:appengine-api-1.0-sdk:+"

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'net.sourceforge.nekohtml:nekohtml' //Needed for thymeleaf LEGACYHTML5 template mode

    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'com.github.n15g:spring-boot-gae:1.1.0-beta-3'


    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

/**
 * Runs webpack in production mode
 */
task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file 'node_modules/webpack/bin/webpack'
    environment = ['NODE_ENV': 'production']
}
processResources.dependsOn 'webpack'
